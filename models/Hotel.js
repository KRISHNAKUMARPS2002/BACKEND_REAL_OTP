const mongoose = require("mongoose");
const { Schema } = mongoose;

const PropertyDetailsSchema = new Schema({
  propertyName: { type: String, required: true },
  isEntirePlace: { type: Boolean, default: true },
  numberofProperty: { type: Number, default: 1 },
  isSameAddress: { type: Boolean, default: true },
  stayCategoryOption: { type: String, default: "" },
  propertyCountry: { type: String, required: true },
  propertyStreetName: { type: String, required: true },
  propertyPostCode: { type: String, required: true },
  propertyCity: { type: String, required: true },
  livingRoomBottomSheet: { type: Boolean, default: false },
  otherSpaceBottomSheet: { type: Boolean, default: false },
  bedroomBottomSheet: { type: Boolean, default: false },
  bedRoomSelectedIndex: { type: Number, default: 0 },
  bedRoomList: { type: [String], default: [] },
  livingRoomSofaBed: { type: Number, default: 0 },
  otherSpaceSingleBed: { type: Number, default: 0 },
  otherSpaceOfDoubleBed: { type: Number, default: 0 },
  otherSpaceKingSizeBedCount: { type: Number, default: 0 },
  otherSpaceSuperKingSizeBedCount: { type: Number, default: 0 },
  otherSpaceBunkBed: { type: Number, default: 0 },
  otherSpaceSofaBed: { type: Number, default: 0 },
  otherSpaceFutonMat: { type: Number, default: 0 },
  bedroomSingleBed: { type: Number, default: 1 },
  bedroomOfDoubleBed: { type: Number, default: 0 },
  bedroomKingSizeBedCount: { type: Number, default: 0 },
  bedroomSuperKingSizeBedCount: { type: Number, default: 0 },
  bedroomBunkBed: { type: Number, default: 0 },
  bedroomSofaBed: { type: Number, default: 0 },
  bedroomFutonMat: { type: Number, default: 0 },
  isallowChildren: { type: Boolean, default: false },
  allowCoats: { type: Boolean, default: false },
  guestCapacity: { type: Number, default: 1 },
  bathRoomCount: { type: Number, default: 0 },
  airConditioning: { type: Boolean, default: false },
  heating: { type: Boolean, default: false },
  freeWifi: { type: Boolean, default: false },
  evChargingStation: { type: Boolean, default: false },
  kitchen: { type: Boolean, default: false },
  kitchenette: { type: Boolean, default: false },
  washingMachine: { type: Boolean, default: false },
  flatScreenTV: { type: Boolean, default: false },
  swimmingPool: { type: Boolean, default: false },
  hotTub: { type: Boolean, default: false },
  minibar: { type: Boolean, default: false },
  sauna: { type: Boolean, default: false },
  balcony: { type: Boolean, default: false },
  gardenView: { type: Boolean, default: false },
  terrace: { type: Boolean, default: false },
  view: { type: Boolean, default: false },
  serveBreakfast: { type: Boolean, default: false },
  parkingOption: { type: String, default: "No" },
  isBrakFastIncludedCost: { type: Boolean, default: true },
  breackFastCostController: { type: String, default: "" },
  offeredbreakFastList: { type: [String], default: [] },
  isBreakFastSelected: { type: Boolean, default: false },
  staffLanguagesList: { type: [String], default: [] },
  selectedLanguage: { type: String, default: "" },
  checkInFrom: { type: String, default: "15:00" },
  checkInUntil: { type: String, default: "18:00" },
  checkOutFrom: { type: String, default: "08:00" },
  checkOutUntil: { type: String, default: "11:00" },
  issmokingAllowed: { type: Boolean, default: false },
  isallowPets: { type: Boolean, default: false },
  iseventsAllowed: { type: Boolean, default: false },
  isshowProperty: { type: Boolean, default: true },
  isshowHost: { type: Boolean, default: false },
  isshowNeighborhood: { type: Boolean, default: false },
});

const HotelSchema = new Schema({
  name: { type: String, required: true },
  address: { type: String, required: true },
  propertyDetails: { type: [PropertyDetailsSchema], default: [] },
  location: { type: String, required: true },
  owner: { type: Schema.Types.ObjectId, ref: "Admin", required: true },
  images: [String], // Array of image URLs
  amenities: [String], // Array of amenities
  description: { type: String },
  contactNumber: { type: String },
  workers: [{ type: Schema.Types.ObjectId, ref: "Worker" }],
});

module.exports = mongoose.model("Hotel", HotelSchema);
